name: 'Auto Translate and Release'

on:
  workflow_dispatch:
    inputs:
      openai_model:
        description: 'OpenAI Model'
        required: true
        default: 'gpt-4o-mini'
        type: string
      api_endpoint:
        description: 'API Endpoint (optional, defaults to OpenAI official)'
        required: false
        default: 'https://api.openai.com/v1'
        type: string
      target_language:
        description: 'Target Language'
        required: true
        default: 'ÁÆÄ‰Ωì‰∏≠Êñá'
        type: string
      release_tag:
        description: 'Release Tag (use "latest" for source repo latest tag, or specify custom tag)'
        required: false
        default: 'latest'
        type: string
      dry_run:
        description: 'Dry Run (analyze and translate only, no replacement/build)'
        required: false
        default: false
        type: boolean

jobs:
  translate-and-release:
    runs-on: ubuntu-latest
    
    steps:
      - name: Checkout current repository
        uses: actions/checkout@v4
        
      - name: Restore translation cache
        uses: actions/cache@v4
        with:
          path: |
            translation-cache.json
          key: translation-cache-${{ inputs.openai_model }}-${{ inputs.target_language }}-${{ github.run_id }}
          restore-keys: |
            translation-cache-${{ inputs.openai_model }}-${{ inputs.target_language }}-
            translation-cache-${{ inputs.openai_model }}-
            translation-cache-
        
      - name: Setup Node.js
        uses: actions/setup-node@v4
        with:
          node-version: '20'
          
      - name: Setup pnpm
        uses: pnpm/action-setup@v4
        with:
          version: 8
          
      - name: Clone source repository
        run: |
          echo "üì• Cloning Modrinth source repository..."
          git clone --recurse-submodules https://github.com/modrinth/code.git modrinth-source
          cd modrinth-source
          echo "‚úÖ Repository cloned successfully"
          echo "üìä Repository statistics:"
          find . -type f -name "*.vue" -o -name "*.ts" -o -name "*.js" -o -name "*.tsx" -o -name "*.jsx" | wc -l | xargs echo "Total relevant files:"
          
      - name: Analyze project structure
        run: |
          echo "üîç Analyzing project structure..."
          node scripts/analyze-project.js modrinth-source
          
      - name: Extract translatable text
        run: |
          echo "üìù Extracting translatable text from apps/app-frontend..."
          node scripts/extract-text.js modrinth-source/apps/app-frontend
          
      - name: Translate text with AI
        env:
          OPENAI_API_KEY: ${{ secrets.OPENAI_API_KEY }}
          OPENAI_MODEL: ${{ inputs.openai_model }}
          API_ENDPOINT: ${{ inputs.api_endpoint }}
          TARGET_LANGUAGE: ${{ inputs.target_language }}
        run: |
          echo "ü§ñ Translating text with ${{ inputs.openai_model }}..."
          node scripts/translate-text.js
          
      - name: Save translation cache
        uses: actions/cache/save@v4
        if: always()
        with:
          path: |
            translation-cache.json
          key: translation-cache-${{ inputs.openai_model }}-${{ inputs.target_language }}-${{ github.run_id }}
          
      - name: Upload translation artifacts
        uses: actions/upload-artifact@v4
        if: always()
        with:
          name: translation-artifacts-${{ github.run_id }}
          path: |
            extracted-text.json
            translations.json
            translation-mapping.json
            translation-cache.json
          retention-days: 30
          
      - name: Replace text in source code
        if: ${{ !inputs.dry_run }}
        run: |
          echo "üîÑ Replacing text in source code..."
          cp -r modrinth-source modrinth-source-backup
          node scripts/replace-text.js modrinth-source
          
      - name: Install Rust (for Tauri builds)
        if: ${{ !inputs.dry_run }}
        uses: dtolnay/rust-toolchain@stable
        with:
          targets: x86_64-unknown-linux-gnu,x86_64-pc-windows-gnu,x86_64-apple-darwin,aarch64-apple-darwin
          
      - name: Install build dependencies
        if: ${{ !inputs.dry_run }}
        run: |
          echo "üì¶ Installing build dependencies..."
          node scripts/install-deps.js
          
      - name: Build for multiple platforms
        if: ${{ !inputs.dry_run }}
        run: |
          echo "üèóÔ∏è Building for multiple platforms..."
          node scripts/multi-platform-build.js
          
      - name: Create release
        if: ${{ !inputs.dry_run }}
        env:
          GITHUB_TOKEN: ${{ secrets.GITHUB_TOKEN }}
          RELEASE_TAG: ${{ inputs.release_tag }}
          OPENAI_MODEL: ${{ inputs.openai_model }}
          TARGET_LANGUAGE: ${{ inputs.target_language }}
        run: |
          echo "üöÄ Creating release..."
          node scripts/create-release.js
          
      - name: Generate summary report
        run: |
          echo "üìã Generating summary report..."
          node scripts/generate-report.js
          
      - name: Upload build artifacts
        uses: actions/upload-artifact@v4
        if: always()
        with:
          name: build-reports-${{ github.run_id }}
          path: |
            build-report.json
            replacement-report.json
            replacement-summary.md
            project-analysis.json
            workflow-summary.json
          retention-days: 7